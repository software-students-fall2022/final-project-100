name: admin workflow

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./admin
    timeout-minutes: 10
    strategy:
      matrix:
        python-version: ["3.8", "3.10"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Create env file
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Test with pytest
        run: |
          pytest
  dockhub_push:
    name: Push Docker image to Docker Hub
    needs: build
    defaults:
      run:
        working-directory: ./admin
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Create env file
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env
      - name: Build and push
        run: |
          docker build . --tag cty288/course-admin
          docker push cty288/course-admin
  deploy:
    runs-on: ubuntu-latest
    needs: dockhub_push
    
    steps:
      - name: DigitalOcean App Platform deployment
        uses: digitalocean/app_action@main
        with:
          app_name: course-admin
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
